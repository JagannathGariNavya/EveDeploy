import { AdapterAPI, AllDragTypes, CleanupFn, EventPayloadMap } from '../internal-types';
export declare function makeAdapter<DragType extends AllDragTypes>({ typeKey, mount, dispatchEventToSource, defaultDropEffect, }: {
    typeKey: DragType['key'];
    mount: (api: AdapterAPI<DragType>) => CleanupFn;
    defaultDropEffect: DragType['defaultDropEffect'];
    dispatchEventToSource?: <EventName extends keyof EventPayloadMap<DragType>>(args: {
        eventName: EventName;
        payload: EventPayloadMap<DragType>[EventName];
    }) => void;
}): {
    registerUsage: () => CleanupFn;
    dropTarget: (args: import("../internal-types").DropTargetArgs<DragType>) => CleanupFn;
    monitor: (args: import("../internal-types").MonitorArgs<DragType>) => CleanupFn;
};
